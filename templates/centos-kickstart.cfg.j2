# {{ ansible_managed }}
# Kickstart file automatically generated by anaconda.
# version=CentOS 6.x - AMD64
# Begin main block
install
text
url --url={{ mirror }}/os/{{ arch }}/
lang en_US.UTF-8
keyboard us
network --device=eth0 --bootproto=dhcp
rootpw  --iscrypted $6$bgaxaK4UJ.s/mnPI$REZqH8N2.bc6m7OkcQb1PW76HPfBnBVSl/VEt7Cmkcp2ApMFi4cV2CmtispP5EEqXabtS3r9kMHB38Fb7OCe40
authconfig --enableshadow --passalgo=sha512
firewall --disabled
selinux --disabled
timezone --utc Europe/Amsterdam
# Disk configuration (Created dynamically in pre-phase)
%include /tmp/include.me

# Repositories (Use local ones)
services --enabled sshd,ntpd,nfs,rpcbind
# Packagelist (as minimal as possible)
%packages --ignoremissing
@core
openssh-clients
-pcmciautils
-rfkill
-cairo
-pango
-gtk2
-fprintd
-fprintd-pam
%end
# PostInstall stuff
%post --log=/root/anaconda-postinstall.log
cd /root
echo curl -O http://grtzpsd3/post/postks.sh
echo sh postks.sh
%end
%pre
#!/bin/bash

# Check physical and virtio disks
for disk in /sys/block/sd* /sys/block/vd*
do
        dsk=$(basename $disk)

        if [[ `cat $disk/ro` -eq 1 ]];
        then
                echo "Skipping disk $dsk: READONLY"
                continue;
        fi

        if [[ `cat $disk/removable` -eq 1 ]];
        then
                echo "Skipping disk $dsk: REMOVABLE"
                continue;
        fi

        if [[ `cat $disk/size` -lt 6291456 ]];
        then
                echo "Skipping disk $dsk: Smaller then 3G"
                continue;
        else
                echo "Using disk $dsk"
                chosen=$dsk;
                break;
        fi
done

incfile=/tmp/include.me
> $incfile

if [[ -n $chosen ]];
then
        echo "zerombr" >> $incfile
        echo "bootloader --location=mbr --driveorder=$chosen --append=\"crashkernel=auto\"" >> $incfile
        echo "ignoredisk --only-use=$chosen" >> $incfile
        echo "clearpart --all --initlabel --drives=$chosen" >> $incfile
        echo "part /boot --fstype=ext3 --asprimary --size=256" >> $incfile
        echo "part pv.$chosen --grow --size=3800" >> $incfile
        echo "volgroup vg00 --pesize=32768 pv.$chosen" >> $incfile
        echo "logvol / --fstype=ext4 --name=root --vgname=vg00 --size=3500" >> $incfile
        echo "logvol swap --name=swap --vgname=vg00 --size=256" >> $incfile
        echo "poweroff" >> $incfile
else
        echo "" > $incfile
fi

%end
# End Pre
